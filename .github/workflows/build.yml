name: Fetch Update and Publish Release

on:
  workflow_dispatch:
  schedule:
    - cron: "4 5 * * *"

jobs:
  fetch-and-release:
    runs-on: macos-14
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4.1.1

      - name: Determine Release Tag
        run: |
          BRANCH_NAME=$(git branch --show-current | tr '[:upper:]' '[:lower:]')
          echo "[*] branch name: $BRANCH_NAME"

          if [[ $BRANCH_NAME = "openssl"* ]]; then
            echo "[*] treating branch name as tag!"

            BUILD_TAG=$BRANCH_NAME
            echo "BUILD_TAG=$BUILD_TAG" >> $GITHUB_ENV
            RELEASE_TAG=$BRANCH_NAME
            echo "RELEASE_TAG=$RELEASE_TAG" >> $GITHUB_ENV
            STORAGE_RELEASE_TAG="storage.$RELEASE_TAG"
            echo "STORAGE_RELEASE_TAG=$STORAGE_RELEASE_TAG" >> $GITHUB_ENV

            exit 0
          fi

          OPENSSL_TAG=$(curl -s -L -o /dev/null -w "%{url_effective}\n" https://github.com/openssl/openssl/releases/latest | sed 's|.*/tag/\(.*\)|\1|')
          echo "[*] upstream openssl tag: $OPENSSL_TAG"

          # make sure tag is in format openssl-%d.%d.%d
          if [[ ! $OPENSSL_TAG =~ ^openssl-[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "[*] invalid openssl tag, skip pipeline: $OPENSSL_TAG"
            exit 0
          fi

          MAJOR_VERSION=$(echo $OPENSSL_TAG | cut -d'-' -f2 | cut -d'.' -f1)
          MINOR_VERSION=$(echo $OPENSSL_TAG | cut -d'-' -f2 | cut -d'.' -f2)
          PATCH_VERSION=$(echo $OPENSSL_TAG | cut -d'-' -f2 | cut -d'.' -f3)
          echo "[*] tag validated, major: $MAJOR_VERSION, minor: $MINOR_VERSION, patch: $PATCH_VERSION"

          if [ $MAJOR_VERSION -lt 3 ]; then
            echo "[*] invalid openssl tag, skip pipeline: $OPENSSL_TAG, major version must be >= 3"
            exit 0
          fi

          BUILD_TAG=$OPENSSL_TAG
          echo "BUILD_TAG=$BUILD_TAG" >> $GITHUB_ENV
          RELEASE_TAG="$MAJOR_VERSION.$MINOR_VERSION.$PATCH_VERSION"
          echo "RELEASE_TAG=$RELEASE_TAG" >> $GITHUB_ENV
          STORAGE_RELEASE_TAG="storage.$RELEASE_TAG"
          echo "STORAGE_RELEASE_TAG=$STORAGE_RELEASE_TAG" >> $GITHUB_ENV

      - name: Check If Compile Required
        run: |
          echo "[*] wants build tag: $BUILD_TAG"

          git pull --tags
          if git rev-parse "$STORAGE_RELEASE_TAG" >/dev/null 2>&1; then
              echo "[*] tag $STORAGE_RELEASE_TAG already exists, exiting"
              echo "UPDATE_NEEDED=false" >> $GITHUB_ENV
          else
              echo "[*] tag $STORAGE_RELEASE_TAG does not exist, pass to build"
              echo "UPDATE_NEEDED=true" >> $GITHUB_ENV
          fi

      - name: Setup Build
        if: env.UPDATE_NEEDED == 'true'
        run: |
          uname -a
          echo "[*] installing dependencies..."
          brew install libtool autoconf automake pkgconfig coreutils bash zip swiftformat
          echo "[*] switching xcode version..."
          sudo xcode-select -s /Applications/Xcode_15.2.app
          xcode-select -p
          xcodebuild -version
          echo "[*] preparing xcode..."
          xcodebuild -downloadAllPlatforms

      - name: Build If Needed
        if: env.UPDATE_NEEDED == 'true'
        run: |

          echo "[*] build tag: $BUILD_TAG"
          echo "[*] release tag: $RELEASE_TAG"
          echo "[*] storage release tag: $STORAGE_RELEASE_TAG"

          EST_XCFRAMEWORK_DOWNLOAD_URL="https://github.com/${{ github.repository }}/releases/download/$STORAGE_RELEASE_TAG/libssl.xcframework.zip"
          echo "[*] estimated xcframework download url: $EST_XCFRAMEWORK_DOWNLOAD_URL"

          ./Script/build.sh "$BUILD_TAG"
          mv ./build/libssl.xcframework.zip /tmp/libssl.xcframework.zip
          git clean -fdx -f
          git reset --hard
          mv /tmp/libssl.xcframework.zip ./libssl.xcframework.zip
          ./Script/build-manifest.sh libssl.xcframework.zip $EST_XCFRAMEWORK_DOWNLOAD_URL

      - name: Commit & Push changes
        uses: actions-js/push@master
        if: env.UPDATE_NEEDED == 'true'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tags: true

      - name: Make Storage Release
        if: env.UPDATE_NEEDED == 'true'
        uses: softprops/action-gh-release@v0.1.15
        with:
          tag_name: ${{ env.STORAGE_RELEASE_TAG }}
          body: |
            # Updated Release
            This release was made by automation.
          draft: false
          prerelease: false
          files: |
            libssl.xcframework.zip

      - name: Make Release
        if: env.UPDATE_NEEDED == 'true'
        uses: softprops/action-gh-release@v0.1.15
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          body: |
            # Package
            This release was made by automation.
          draft: false
          prerelease: false

      - name: Keepalive Workflow
        uses: gautamkrishnar/keepalive-workflow@v2